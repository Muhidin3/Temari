"use client"

import { useState } from "react"
import Link from "next/link"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Input } from "@/components/ui/input"
import { Navigation } from "@/components/navigation"
import { Search, TrendingUp, Users, BookOpen, ArrowRight, Filter } from 'lucide-react'

export default function CategoriesPage() {
  const [language] = useState("en")
  const [searchTerm, setSearchTerm] = useState("")

  const categories = [
    {
      id: "development",
      name: "Development",
      nameAm: "·ã≤·â®·àé·çï·àò·äï·âµ",
      description: "Learn programming, web development, mobile apps and more",
      descriptionAm: "·çï·àÆ·åç·à´·àö·äï·åç·ç£ ·ãå·â• ·ã≤·â®·àé·çï·àò·äï·âµ·ç£ ·àû·â£·ã≠·àç ·ä†·çï·àä·ä¨·àΩ·äñ·âΩ ·ä•·äì ·àå·àé·âΩ·äï·àù ·ã≠·àõ·à©",
      icon: "üíª",
      courses: 1250,
      students: 45000,
      avgRating: 4.7,
      trending: true,
      color: "bg-blue-500",
      subcategories: ["Web Development", "Mobile Development", "Game Development", "Data Science"],
    },
    {
      id: "business",
      name: "Business",
      nameAm: "·äï·åç·ãµ",
      description: "Master business skills, entrepreneurship and management",
      descriptionAm: "·ã®·äï·åç·ãµ ·ä≠·àÖ·àé·â∂·âΩ·ç£ ·àµ·à´ ·çà·å†·à´ ·ä•·äì ·ä†·àµ·â∞·ã≥·ã∞·à≠·äï ·ã≠·âÜ·å£·å†·à©",
      icon: "üíº",
      courses: 890,
      students: 32000,
      avgRating: 4.6,
      trending: false,
      color: "bg-green-500",
      subcategories: ["Entrepreneurship", "Management", "Finance", "Marketing"],
    },
    {
      id: "design",
      name: "Design",
      nameAm: "·ã≤·ãõ·ã≠·äï",
      description: "Create beautiful designs, UI/UX and graphic design",
      descriptionAm: "·ãç·â• ·ã≤·ãõ·ã≠·äñ·âΩ·ç£ UI/UX ·ä•·äì ·åç·à´·çä·ä≠ ·ã≤·ãõ·ã≠·äï ·ã≠·çç·å†·à©",
      icon: "üé®",
      courses: 650,
      students: 28000,
      avgRating: 4.8,
      trending: true,
      color: "bg-purple-500",
      subcategories: ["UI/UX Design", "Graphic Design", "Web Design", "Logo Design"],
    },
    {
      id: "marketing",
      name: "Marketing",
      nameAm: "·àõ·à≠·ä¨·â≤·äï·åç",
      description: "Digital marketing, social media and advertising strategies",
      descriptionAm: "·ã≤·åÇ·â≥·àç ·àõ·à≠·ä¨·â≤·äï·åç·ç£ ·à∂·àª·àç ·àö·ã≤·ã´ ·ä•·äì ·ã®·àõ·àµ·â≥·ãà·âÇ·ã´ ·àµ·âµ·à´·â¥·åÇ·ãé·âΩ",
      icon: "üìà",
      courses: 420,
      students: 18000,
      avgRating: 4.5,
      trending: true,
      color: "bg-orange-500",
      subcategories: ["Digital Marketing", "Social Media", "SEO", "Content Marketing"],
    },
    {
      id: "photography",
      name: "Photography",
      nameAm: "·çé·â∂·åç·à´·çä",
      description: "Learn photography techniques and photo editing",
      descriptionAm: "·ã®·çé·â∂·åç·à´·çä ·â¥·ä≠·äí·äÆ·âΩ ·ä•·äì ·ã®·çé·â∂ ·ä†·à≠·âµ·ãñ·âµ ·ã≠·àõ·à©",
      icon: "üì∏",
      courses: 380,
      students: 15000,
      avgRating: 4.7,
      trending: false,
      color: "bg-pink-500",
      subcategories: ["Portrait Photography", "Landscape", "Photo Editing", "Commercial Photography"],
    },
    {
      id: "music",
      name: "Music",
      nameAm: "·àô·ãö·âÉ",
      description: "Music production, instruments and music theory",
      descriptionAm: "·ã®·àô·ãö·âÉ ·àù·à≠·âµ·ç£ ·àò·à≥·à™·ã´·ãé·âΩ ·ä•·äì ·ã®·àô·ãö·âÉ ·äï·ãµ·çà ·àÉ·à≥·â•",
      icon: "üéµ",
      courses: 290,
      students: 12000,
      avgRating: 4.6,
      trending: false,
      color: "bg-indigo-500",
      subcategories: ["Music Production", "Guitar", "Piano", "Music Theory"],
    },
    {
      id: "health",
      name: "Health & Fitness",
      nameAm: "·å§·äì ·ä•·äì ·â•·âÉ·âµ",
      description: "Health, fitness, nutrition and wellness courses",
      descriptionAm: "·å§·äì·ç£ ·â•·âÉ·âµ·ç£ ·ä†·àò·åã·åà·â• ·ä•·äì ·ã∞·àÖ·äï·äê·âµ ·äÆ·à≠·à∂·âΩ",
      icon: "üè•",
      courses: 340,
      students: 20000,
      avgRating: 4.4,
      trending: false,
      color: "bg-red-500",
      subcategories: ["Fitness", "Nutrition", "Mental Health", "Yoga"],
    },
    {
      id: "language",
      name: "Language",
      nameAm: "·âã·äï·âã",
      description: "Learn new languages and improve communication skills",
      descriptionAm: "·ä†·ã≤·àµ ·âã·äï·âã·ãé·âΩ·äï ·ã≠·àõ·à© ·ä•·äì ·ã®·àò·åç·â£·â¢·ã´ ·ä≠·àÖ·àé·â∂·âΩ·äï ·ã´·àª·àΩ·àâ",
      icon: "üó£Ô∏è",
      courses: 520,
      students: 25000,
      avgRating: 4.5,
      trending: true,
      color: "bg-teal-500",
      subcategories: ["English", "Amharic", "French", "Spanish"],
    },
  ]

  const filteredCategories = categories.filter((category) =>
    (language === "am" ? category.nameAm : category.name).toLowerCase().includes(searchTerm.toLowerCase())
  )

  return (
    <div className="min-h-screen bg-background">
      <Navigation />

      <div className="container mx-auto px-4 py-8">
        {/* Header */}
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold mb-4">{language === "am" ? "·àù·ãµ·â¶·âΩ" : "Course Categories"}</h1>
          <p className="text-muted-foreground max-w-2xl mx-auto">
            {language === "am"
              ? "·ã®·â∞·àà·ã´·ã© ·ãò·à≠·çé·âΩ·äï ·ã´·àµ·à± ·ä•·äì ·ã®·àö·çà·àç·åâ·âµ·äï ·ä≠·àÖ·àé·âµ ·ã´·åç·äô"
              : "Explore different fields and find the skills you need to advance your career"}
          </p>
        </div>

        {/* Search */}
        <div className="max-w-md mx-auto mb-12">
          <div className="relative">
            <Search className="absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground" />
            <Input
              placeholder={language === "am" ? "·àù·ãµ·â¶·âΩ·äï ·çà·àç·åç..." : "Search categories..."}
              className="pl-10"
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
            />
          </div>
        </div>

        {/* Stats */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-12">
          <Card className="text-center">
            <CardContent className="p-4">
              <div className="text-2xl font-bold text-abuki-primary">8</div>
              <div className="text-sm text-muted-foreground">{language === "am" ? "·àù·ãµ·â¶·âΩ" : "Categories"}</div>
            </CardContent>
          </Card>
          <Card className="text-center">
            <CardContent className="p-4">
              <div className="text-2xl font-bold text-abuki-primary">4,740</div>
              <div className="text-sm text-muted-foreground">{language === "am" ? "·äÆ·à≠·à∂·âΩ" : "Courses"}</div>
            </CardContent>
          </Card>
          <Card className="text-center">
            <CardContent className="p-4">
              <div className="text-2xl font-bold text-abuki-primary">195K</div>
              <div className="text-sm text-muted-foreground">{language === "am" ? "·â∞·àõ·à™·ãé·âΩ" : "Students"}</div>
            </CardContent>
          </Card>
          <Card className="text-center">
            <CardContent className="p-4">
              <div className="text-2xl font-bold text-abuki-primary">4.6</div>
              <div className="text-sm text-muted-foreground">{language === "am" ? "·ä†·àõ·ä´·ã≠ ·ã∞·à®·åÉ" : "Avg Rating"}</div>
            </CardContent>
          </Card>
        </div>

        {/* Categories Grid */}
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
          {filteredCategories.map((category) => (
            <Card key={category.id} className="group hover:shadow-lg transition-all duration-300 cursor-pointer">
              <CardHeader>
                <div className="flex items-center justify-between mb-4">
                  <div className="text-4xl">{category.icon}</div>
                  {category.trending && (
                    <Badge className="bg-abuki-primary/10 text-abuki-primary">
                      <TrendingUp className="h-3 w-3 mr-1" />
                      {language === "am" ? "·â∞·ãà·ã≥·åÖ" : "Trending"}
                    </Badge>
                  )}
                </div>
                <CardTitle className="text-xl">{language === "am" ? category.nameAm : category.name}</CardTitle>
                <CardDescription>{language === "am" ? category.descriptionAm : category.description}</CardDescription>
              </CardHeader>

              <CardContent>
                <div className="grid grid-cols-2 gap-4 mb-4 text-sm">
                  <div className="flex items-center gap-1">
                    <BookOpen className="h-4 w-4 text-abuki-primary" />
                    <span>
                      {category.courses} {language === "am" ? "·äÆ·à≠·à∂·âΩ" : "courses"}
                    </span>
                  </div>
                  <div className="flex items-center gap-1">
                    <Users className="h-4 w-4 text-abuki-primary" />
                    <span>
                      {category.students.toLocaleString()} {language === "am" ? "·â∞·àõ·à™·ãé·âΩ" : "students"}
                    </span>
                  </div>
                </div>

                <div className="mb-4">
                  <div className="text-sm text-muted-foreground mb-2">
                    {language === "am" ? "·äï·ãë·àµ ·àù·ãµ·â¶·âΩ:" : "Subcategories:"}
                  </div>
                  <div className="flex flex-wrap gap-1">
                    {category.subcategories.slice(0, 3).map((sub, index) => (
                      <Badge key={index} variant="outline" className="text-xs">
                        {sub}
                      </Badge>
                    ))}
                    {category.subcategories.length > 3 && (
                      <Badge variant="outline" className="text-xs">
                        +{category.subcategories.length - 3}
                      </Badge>
                    )}
                  </div>
                </div>

                <Link href={`/courses?category=${category.id}`}>
                  <Button className="w-full bg-abuki-primary hover:bg-abuki-accent group-hover:bg-abuki-accent">
                    {language === "am" ? "·äÆ·à≠·à∂·âΩ·äï ·ã≠·àò·àç·ä®·â±" : "Explore Courses"}
                    <ArrowRight className="ml-2 h-4 w-4" />
                  </Button>
                </Link>
              </CardContent>
            </Card>
          ))}
        </div>
      </div>
    </div>
  )
}
